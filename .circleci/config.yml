# c.f. https://circleci.com/docs/2.0/language-javascript/
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13

executors:
  node-executor:
    docker:
      # c.f. https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/node/images
      - image: circleci/node:12.6.0-stretch
    working_directory: ~/warm-and-fuzzy

jobs:
  build:
    executor: node-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run builds
      - run: npm run build

      # Persist workspace for deployment
      - persist_to_workspace:
          root: .
          paths:
            - packages

  deploy:
    executor: node-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # (Don't save cache again, we'll just let `build` deal with it)

      # Configure AWS toolchain
      - aws-cli/install
      - aws-cli/configure

      # Attach to `build` workspace (provides built packages/)
      - attach_workspace:
          at: .

      # Deploy
      - run:
          name: Deploy
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              npm run deploy:prod
            else
              npm run deploy:dev
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - hold-to-deploy:
          type: approval
          requires:
            - build
      - deploy:
          context: warm-and-fuzzy-aws
          requires:
            - hold-to-deploy
