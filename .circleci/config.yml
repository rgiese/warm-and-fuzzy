# c.f. https://circleci.com/docs/2.0/language-javascript/
version: 2.1

executors:
  grumpy-executor:
    docker:
      - image: grumpycorp/warm-and-fuzzy-ci:3
    working_directory: ~/warm-and-fuzzy

jobs:
  #
  # API+firmware jobs
  #

  build:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run builds
      - run: npm run build

      # Persist workspace for deployment
      - persist_to_workspace:
          root: .
          paths:
            - packages

  api-deploy:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Attach to `build` workspace (provides built packages/)
      - attach_workspace:
          at: .

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # (Don't save cache again, we'll just let `build` deal with it)

      # Configure AWS CLI
      - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - run: aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run: aws configure set region $AWS_DEFAULT_REGION

      # Deploy
      - run:
          name: Deploy
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              npm run deploy:prod
            else
              npm run deploy:dev
            fi

  firmware-deploy:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Attach to `build` workspace (provides built packages/)
      - attach_workspace:
          at: .

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # (Don't save cache again, we'll just let `build` deal with it)

      # Upload firmware to Particle cloud
      - run:
          name: Upload firmware to Particle
          command: lerna run firmware:upload

  #
  # Mobile jobs
  #

  mobile-build:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-mobile-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-mobile-dependencies-

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-mobile-dependencies-{{ checksum "package.json" }}

      # Run builds
      - run: npm run decrypt-secrets
      - run: npm run build:shared
      - run: npm run bundle:mobile

      # Persist workspace for deployment
      - persist_to_workspace:
          root: .
          paths:
            - packages

  mobile-publish:
    executor: grumpy-executor
    steps:
      # Check out source
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-mobile-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-mobile-dependencies-

      # Attach to `build` workspace (provides built packages/)
      - attach_workspace:
          at: .

      # Install dependencies
      - run: npm install
      - run: npm run bootstrap

      # Run publish to internal Google Play channel
      - run: npm run publish-mobile:internal

#
# Workflows
#

workflows:
  version: 2

  api-and-firmware:
    jobs:
      - build:
          context: warm-and-fuzzy-particle
      - hold-to-deploy-api:
          type: approval
          requires:
            - build
      - api-deploy:
          context: warm-and-fuzzy-aws
          requires:
            - hold-to-deploy-api
      - hold-to-deploy-firmware:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - firmware-deploy:
          context: warm-and-fuzzy-particle
          requires:
            - hold-to-deploy-firmware
          filters:
            branches:
              only: master

  mobile:
    jobs:
      - mobile-build:
          context: warm-and-fuzzy-git-secrets
      - hold-to-publish:
          type: approval
          requires:
            - mobile-build
          filters:
            branches:
              only: master
      - mobile-publish:
          context: warm-and-fuzzy-git-secrets
          requires:
            - hold-to-publish
          filters:
            branches:
              only: master
