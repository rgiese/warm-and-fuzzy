#
# Directives
#

directive @requiresPermission(permission: RequiredPermission) on FIELD_DEFINITION

enum RequiredPermission {
  READ_CONFIG
  WRITE_CONFIG
  CROSS_TENANT_ADMIN
}

#
# Root
#

schema {
  query: Query
  mutation: Mutation
}

type Query {
  # ThermostatConfiguration
  getThermostatConfigurations: [ThermostatConfiguration!]!
    @requiresPermission(permission: READ_CONFIG)

  getThermostatConfiguration(deviceId: ID!): ThermostatConfiguration!
    @requiresPermission(permission: READ_CONFIG)

  # SensorConfiguration
  getSensorConfigurations: [SensorConfiguration!]! @requiresPermission(permission: READ_CONFIG)

  getSensorConfiguration(sensorId: ID!): SensorConfiguration!
    @requiresPermission(permission: READ_CONFIG)
}

type Mutation {
  # ThermostatConfiguration
  createThermostatConfiguration(
    thermostatConfiguration: ThermostatConfigurationCreateInput!
  ): ThermostatConfiguration! @requiresPermission(permission: WRITE_CONFIG)

  updateThermostatConfiguration(
    thermostatConfiguration: ThermostatConfigurationUpdateInput!
  ): ThermostatConfiguration! @requiresPermission(permission: WRITE_CONFIG)

  # SensorConfiguration
  createSensorConfiguration(
    sensorConfiguration: SensorConfigurationCreateInput!
  ): SensorConfiguration! @requiresPermission(permission: WRITE_CONFIG)

  updateSensorConfiguration(
    sensorConfiguration: SensorConfigurationUpdateInput!
  ): SensorConfiguration! @requiresPermission(permission: WRITE_CONFIG)
}

#
# ThermostatConfiguration
#

input ThermostatConfigurationCreateInput {
  deviceId: ID!
  name: String!

  allowedActions: [ThermostatAction!]!
  setPointHeat: Float!
  setPointCool: Float!
  threshold: Float!

  cadence: Int!
}

input ThermostatConfigurationUpdateInput {
  deviceId: ID!
  name: String

  allowedActions: [ThermostatAction!]
  setPointHeat: Float
  setPointCool: Float
  threshold: Float

  cadence: Int
}

type ThermostatConfiguration {
  deviceId: ID!
  tenant: String!

  name: String!

  allowedActions: [ThermostatAction!]!
  setPointHeat: Float!
  setPointCool: Float!
  threshold: Float!

  cadence: Int!
}

enum ThermostatAction {
  Heat
  Cool
  Circulate
}

#
# SensorConfiguration
#

input SensorConfigurationCreateInput {
  sensorId: ID!
  name: String!
}

input SensorConfigurationUpdateInput {
  sensorId: ID!
  name: String
}

type SensorConfiguration {
  sensorId: ID!
  tenant: String!

  name: String!
}
