service: warm-and-fuzzy-api

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

custom:
  # Distinguish WarmAndFuzzy resource names from other resources in same AWS account
  prefix: "WarmAndFuzzy"
  # Our stage is based on what is passed in when running serverless commands.
  # Fall back to 'dev' (as set in the provider section below) if not specified.
  stage: ${opt:stage, self:provider.stage}
  # API domain management (run `serverless create_domain` once per stage to create domain in Route53)
  customDomain:
    stage: ${self:custom.stage}
    domainName: ${self:custom.stage}.api.warmandfuzzy.house
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs10.x
  region: us-west-2
  stage: dev
  environment:
    AUTH_TOKEN_ISSUER: "https://grumpycorp.auth0.com/"
    AUTH_JWKS_URI: "https://grumpycorp.auth0.com/.well-known/jwks.json"
    AUTH_AUDIENCE: "https://api.warmandfuzzy.house"
    AUTH_CUSTOM_CLAIMS_NAMESPACE: "https://warmandfuzzy.house/"

resources:
  - ${file(resources/api-gateway-errors.yml)}

functions:
  # Authorizers
  auth0Authorizer:
    handler: api/auth/handler.authorize
    cors: true
  # API
  apiGetConfig:
    handler: api/v1/getConfig/handler.getConfig
    events:
      - http:
          method: get
          path: api/v1/getConfig
          cors: true
          authorizer: auth0Authorizer
